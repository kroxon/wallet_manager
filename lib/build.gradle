plugins {
    id "com.android.library"
    id "kotlin-android"
    id "com.github.breadmoirai.github-release"
}

ext {
    // Auto generate version code based on version name
    libVersionCode = versionToCode(libVersion)
}

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools
    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode libVersionCode
        versionName libVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
        androidTest.java.srcDirs += "src/androidTest/kotlin"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$kotlinMockitoVersion"

    androidTestImplementation "androidx.test:runner:$androidxTestRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$androixTestJunitVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$kotlinMockitoVersion"
}

if (project.hasProperty("publishAll") || project.hasProperty("publishLib")) {
    apply from: "../publishing.gradle"
}

apply from: "publishing.gradle"
